{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2662f24b8ed6b09655c5","webpack:///./src/classes/sensor.js","webpack:///./src/index.js","webpack:///./src/sensors/movement-sensor.js","webpack:///./src/constants/movement-type.js","webpack:///./src/classes/event-emitter.js","webpack:///./src/sensors/orientation-sensor.js","webpack:///./src/constants/orientatoin-type.js","webpack:///./src/constants/activity-type.js"],"names":[],"mappings":"AAAA,cACA,2BACA,uCACA,sCACA,IACA,aACA,gDAEA,qBACA,GAAC,mBACD,kBCTA,cAMA,IACA,iBAGA,mBACA,CACA,IACA,KAIA,2CAGA,aAGA,OACA,OAIA,IAzBA,eA4BA,MAGA,uBACA,GACA,kCACA,CACA,gBACA,cAGA,OAGA,iBACA,YACA,qBAA2B,UAA0B,UACrD,YAAiC,CAAe,QAChD,EAEA,aADA,QAIA,mBAAsD,wCAA+D,SAGrH,MAGA,gCC7DA,aAMA,YAAiB,EAEjB,YACA,QACA,MARA,QACA,OACA,6BAQA,cACA,gBAEA,SACA,WAEA,uBACA,kBACA,QACA,gCAEA,QACA,yBACA,oBACA,uBACA,aAEA,UAEA,6DC/BA,aASA,YACA,wBACA,0BACA,8CACA,8CACA,SAZA,QACA,OACA,OAEA,OACA,mCASA,kBAEA,YACA,CAEA,gCACA,YACA,gBAEA,YACA,gDACA,4CACA,6CACA,8CACA,kBAEA,gBACA,gBAEA,2CACA,6CACA,iBAEA,8CACA,2CACA,wCACA,yCACA,gBAEA,qBACA,kBAEA,sBACA,gBAEA,qBACA,iBAEA,mBACA,iBAEA,mBACA,iBAEA,WACA,iBAEA,SAEA,uBACA,cAEA,CACA,8BAEA,UACA,oCAEA,eACA,QAEA,cACA,OAXA,4BAYA,iCACA,YAEA,yBAEA,4BACA,kCAMA,cACA,GAEA,E,2BC9FA,aAMA,iBACA,IAEA,GACA,IAFA,gBAGA,OAAyB,EAAkC,IAC3D,mBACA,QACA,IACA,aAEA,YACA,SAGA,YACA,QACA,OACA,GAEA,YACA,OAEA,YACA,yBACA,CACA,KACA,KAEA,sBACA,wCACA,IACA,GAEA,wCACA,yCACA,yCAEA,iCACA,QAGA,0CACA,OAEA,QACA,OAEA,QACA,OAGA,SAEA,QACA,EA3DA,QACA,OAEA,GA0DA,kBACA,uCACA,0BAEA,iDACA,6BACA,6BACA,6BACA,YAEA,2BACA,6CACA,mBACA,6BACA,gDACA,mBAEA,oCACA,UACA,CACA,gBACA,4BACA,aACA,SACA,iBACA,MACA,qBACA,sBAA2B,CAE3B,aAEC,KAED,E,uBChGA,aAEA,UACA,UACA,kBACA,iBACA,kBACA,iBACA,iBACA,oBACA,0BCVA,aAEA,YACA,MACA,aAEA,YACA,CAEA,mCAEA,mBACA,OAEA,yBACA,IACA,UAGA,iBAIA,WACA,gBAGA,aALA,CAOA,kBACA,YACA,SAEA,UACA,UAEA,OACA,GAEA,E,2BCvCA,aAKA,YACA,OAEA,YACA,yBACA,wCAEA,SACA,SAGA,wDAEA,QAEA,sCAEA,MAEA,mCAEA,MAEA,wCAEA,MAEA,yCAEA,OAEA,0CAEA,OAEA,cAEA,OAEA,wBAEA,QAGA,iBAEA,SACA,EAlDA,QACA,UAmDA,qBACA,uCACA,0BAEA,2BACA,kDACA,mBACA,6BACA,qDACA,mBAEA,oCACA,aACA,CACA,gBACA,4BACA,aACA,YACA,iBACA,MACA,wBACA,yBAA2B,CAE3B,gBAEC,KAED,E,uBCjFA,aAEA,UACA,oBACA,oCACA,mCACA,sCACA,qCACA,oCACA,kCACA,+BACA,uBACA,mBACA,0BCbA,aAEA,UACA,QACA,mBACA,iBACA,kBACA,oBACA,qBACA,qBACA,kBACA,iBACA","file":"bai-activity-sensor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ActivitySensor\"] = factory();\n\telse\n\t\troot[\"ActivitySensor\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2662f24b8ed6b09655c5","'use strict';\n\nvar EventEmitter = require('./event-emitter');\nvar emitterPrototype = EventEmitter.prototype;\nvar sensorPrototype = Object.create(emitterPrototype);\n\nfunction noop() { }\n\nfunction Sensor() {\n    EventEmitter.call(this);\n}\n\nSensor.prototype = sensorPrototype;\nsensorPrototype.constructor = Sensor;\n\nsensorPrototype.init = noop;\nsensorPrototype.uninit = noop;\n\nsensorPrototype.subscribe = function (callback) {\n    emitterPrototype.subscribe.call(this, callback);\n    if (this.callbacks.length === 1) {\n        this.init();\n    }\n};\nsensorPrototype.unsubscribe = function (callback) {\n    emitterPrototype.unsubscribe.call(this, callback);\n    if (!this.callbacks.length) {\n        this.uninit();\n    }\n};\n\nmodule.exports = Sensor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/sensor.js\n// module id = 0\n// module chunks = 0","'use strict';\n\nvar MovementSensor = require('./sensors/movement-sensor');\nvar OrientationSensor = require('./sensors/orientation-sensor');\nvar ACTIVITY_TYPE = require('./constants/activity-type');\n\nvar MOVEMENT_TYPE = MovementSensor.MOVEMENT_TYPE;\nvar ORIENTATION_TYPE = OrientationSensor.ORIENTATION_TYPE;\n\nfunction ActivitySensor() {\n    this.orientationSensor = new OrientationSensor();\n    this.movementSensor = new MovementSensor();\n    this.orientation = this.orientationSensor.orientation;\n    this.movement = this.movementSensor.movement;\n}\n\nActivitySensor.ACTIVITY_TYPE = ACTIVITY_TYPE;\n\nActivitySensor.prototype = {\n    constructor: ActivitySensor,\n\n    get activityType() {\n        var movement = this.movement;\n        var orientation = this.orientation;\n\n        switch (true) {\n        case orientation === ORIENTATION_TYPE.LAYING_SCREEN_DOWN && movement === MOVEMENT_TYPE.STANDING:\n        case orientation === ORIENTATION_TYPE.LAYING_SCREEN_UP && movement === MOVEMENT_TYPE.STANDING:\n        case orientation === ORIENTATION_TYPE.STANDING_PORTRAIT && movement === MOVEMENT_TYPE.STANDING:\n        case orientation === ORIENTATION_TYPE.STANDING_LANDSCAPE && movement === MOVEMENT_TYPE.STANDING:\n            return ACTIVITY_TYPE.IDLE;\n\n        case orientation === ORIENTATION_TYPE.LIFTED:\n            return ACTIVITY_TYPE.LAYING;\n\n        case orientation === ORIENTATION_TYPE.STANDING_PORTRAIT && movement === MOVEMENT_TYPE.DRIVING:\n        case orientation === ORIENTATION_TYPE.STANDING_LANDSCAPE && movement === MOVEMENT_TYPE.DRIVING:\n            return ACTIVITY_TYPE.IN_VEHICLE;\n\n        case orientation === ORIENTATION_TYPE.WATCHED_PORTRAIT && movement === MOVEMENT_TYPE.MOVING:\n        case orientation === ORIENTATION_TYPE.WATCHED_LANDSCAPE && movement === MOVEMENT_TYPE.MOVING:\n        case orientation === ORIENTATION_TYPE.RISED_PORTRAIT && movement === MOVEMENT_TYPE.MOVING:\n        case orientation === ORIENTATION_TYPE.RISED_LANDSCAPE && movement === MOVEMENT_TYPE.MOVING:\n            return ACTIVITY_TYPE.FIDGETING;\n\n        case movement === MOVEMENT_TYPE.STANDING:\n            return ACTIVITY_TYPE.STATIONARY;\n\n        case movement === MOVEMENT_TYPE.MOVING:\n            return ACTIVITY_TYPE.FIDGETING;\n\n        case movement === MOVEMENT_TYPE.WALKING:\n            return ACTIVITY_TYPE.WALKING;\n\n        case movement === MOVEMENT_TYPE.RUNNING:\n            return ACTIVITY_TYPE.RUNNING;\n\n        case movement === MOVEMENT_TYPE.DRIVING:\n            return ACTIVITY_TYPE.IN_VEHICLE;\n\n        default:\n            return ACTIVITY_TYPE.UNKNOWN;\n        }\n    },\n\n    subscribe: function (callback) {\n        var activitySensor = this;\n        function handleSensor(sensor) {\n            if ('movement' in sensor) {\n                activitySensor.movement = sensor.movement;\n            }\n            if ('orientation' in sensor) {\n                activitySensor.orientation = sensor.orientation;\n            }\n            callback({\n                type: activitySensor.activityType\n            });\n        }\n        this.orientationSensor.subscribe(handleSensor);\n        this.movementSensor.subscribe(handleSensor);\n    },\n\n    unsubscribe: function (callback) {\n        if (!callback) {\n            this.orientationSensor.unsubscribe();\n            this.movementSensor.unsubscribe();\n        }\n        else {\n            // this.orientationSensor.unsubscribe(handleSensor)\n            // this.movementSensor.unsubscribe(handleSensor)\n        }\n    }\n};\n\nmodule.exports = ActivitySensor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar MOVEMENT_TYPE = require('../constants/movement-type');\nvar Sensor = require('../classes/sensor');\n\n// numberOfHistoricPoints: 100 is about 3 seconds\nfunction mostRecentMovement(array, numberOfHistoricPoints, removeNegatives) {\n    var totalSum = 0;\n    var toCount;\n    var currentElement;\n    if (array.length > numberOfHistoricPoints) {\n        for (toCount = 0; toCount < numberOfHistoricPoints; toCount++) {\n            currentElement = array[array.length - toCount - 1];\n            currentElement *= (1 - toCount / numberOfHistoricPoints); // weight the most recent data more\n            if (currentElement < 0 && removeNegatives) {\n                currentElement = currentElement * -1;\n            }\n            if (currentElement > 0.1 || currentElement < -0.1) {\n                totalSum += currentElement;\n            }\n        }\n        return totalSum * 100 / numberOfHistoricPoints;\n    }\n    return 0; // not enough data yet\n}\n\nfunction MovementSensor() {\n    var sensor = this;\n\n    Sensor.call(this);\n    this.motionHistory = {\n        x: [],\n        y: [],\n        z: []\n    };\n    this.movement = MOVEMENT_TYPE.UNDEFINED;\n    this.sensorHandler = function (event) {\n        var last75Moves;\n        var last4000Moves;\n\n        sensor.motionHistory.x.push(event.acceleration.x);\n        sensor.motionHistory.y.push(event.acceleration.y);\n        sensor.motionHistory.z.push(event.acceleration.z);\n\n        last75Moves = sensor.mostRecentMovementOverall(75);\n        last4000Moves = sensor.mostRecentMovementOverall(4000);\n\n        // TODO: need to proof all this values\n        if (last4000Moves > 40) {\n            sensor.movement = MOVEMENT_TYPE.DRIVING;\n        }\n        else if (last75Moves > 30) {\n            sensor.movement = MOVEMENT_TYPE.WALKING;\n        }\n        else if (last75Moves > 10) {\n            sensor.movement = MOVEMENT_TYPE.MOVING;\n        }\n        else {\n            sensor.movement = MOVEMENT_TYPE.STANDING;\n        }\n    };\n}\n\nMovementSensor.MOVEMENT_TYPE = MOVEMENT_TYPE;\nMovementSensor.prototype = Object.create(Sensor.prototype);\nMovementSensor.prototype.constructor = MovementSensor;\n\nMovementSensor.prototype.mostRecentMovementOverall = function (length) {\n    return (mostRecentMovement(this.motionHistory.x, length, true) +\n        mostRecentMovement(this.motionHistory.y, length, true) +\n        mostRecentMovement(this.motionHistory.z, length, true)) / 3.0;\n};\n\nMovementSensor.prototype.init = function () {\n    window.addEventListener('devicemotion', this.sensorHandler, false);\n};\nMovementSensor.prototype.uninit = function () {\n    window.removeEventListener('devicemotion', this.sensorHandler, false);\n};\n\nObject.defineProperties(MovementSensor.prototype, {\n    movement: {\n        configurable: false,\n        enumerable: true,\n        get: function () {\n            return this._movement;\n        },\n        set: function (value) {\n            if (this._movement !== value) {\n                this._movement = value;\n                this.emit({ movement: value });\n            }\n        }\n    }\n});\n\nmodule.exports = MovementSensor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sensors/movement-sensor.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n    STANDING: 'Standing',\n    MOVING: 'Moving',\n    WALKING: 'Walking',\n    RUNNING: 'Running',\n    RIDING: 'Riding',\n    DRIVING: 'Driving',\n    UNDEFINED: 'Undefined'\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/constants/movement-type.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nfunction EventEmitter() {\n    this.callbacks = [];\n}\n\nEventEmitter.prototype = {\n    constructor: EventEmitter,\n\n    subscribe: function (callback) {\n        if (!callback) return;\n        this.callbacks.push(callback);\n    },\n\n    unsubscribe: function (callback) {\n        var index;\n        var callbacks = this.callbacks;\n\n        if (!callback) {\n            callbacks.length = 0;\n        }\n        else {\n            index = callbacks.indexOf(callback);\n            if (index >= 0) {\n                callbacks.slice(index, 1);\n            }\n        }\n    },\n\n    emit: function (event) {\n        var index = -1;\n        var callbacks = this.callbacks;\n\n        while (++index in callbacks) {\n            callbacks[index](event);\n        }\n    }\n};\n\nmodule.exports = EventEmitter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/classes/event-emitter.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nvar ORIENTATION_TYPE = require('../constants/orientatoin-type');\nvar Sensor = require('../classes/sensor');\n\nfunction OrientationSensor() {\n    var sensor = this;\n\n    Sensor.call(this);\n    this.orientation = ORIENTATION_TYPE.UNDEFINED;\n    this.sensorHandler = function (event) {\n        // var alpha = event.alpha;\n        var beta = event.beta;\n        var gamma = event.gamma;\n\n        // TODO: need to proof all this values\n        if (((beta > 175 || beta < -175) || (beta > -5 && beta < 5)) && (gamma < -85 || gamma > 85)) {\n            // taking a landscape picture\n            sensor.orientation = ORIENTATION_TYPE.STANDING_LANDSCAPE;\n        }\n        else if (beta >= 70 && beta < 95 && gamma > -5 && gamma < 5) {\n            // taking a picture\n            sensor.orientation = ORIENTATION_TYPE.STANDING_PORTRAIT;\n        }\n        else if (beta > -1 && beta < 1 && gamma > -1 && gamma < 1) {\n            // using the phone on a table\n            sensor.orientation = ORIENTATION_TYPE.LAYING_SCREEN_UP;\n        }\n        else if ((beta < -179 || beta > 179) && gamma > -1 && gamma < 1) {\n            // using the phone on a table\n            sensor.orientation = ORIENTATION_TYPE.LAYING_SCREEN_DOWN;\n        }\n        else if ((gamma > 35 || gamma < -35) && (beta > -90 && beta < 90)) {\n            // lying in bed sideways, or taking a landscape picture\n            sensor.orientation = ORIENTATION_TYPE.WATCHED_LANDSCAPE;\n        }\n        else if ((beta > 160 || beta < -160) && gamma > -10 && gamma < 10) {\n            // lying on your back, with your phone up\n            sensor.orientation = ORIENTATION_TYPE.LIFTED;\n        }\n        else if (beta >= 30 && beta < 70) {\n            // using in hands sitting or standing\n            sensor.orientation = ORIENTATION_TYPE.WATCHED_PORTRAIT;\n        }\n        else if (beta >= 95 && beta < 120) {\n            // taking a selfie\n            sensor.orientation = ORIENTATION_TYPE.RISED_PORTRAIT;\n        }\n        else {\n            sensor.orientation = ORIENTATION_TYPE.UNDEFINED;\n        }\n    };\n}\n\nOrientationSensor.ORIENTATION_TYPE = ORIENTATION_TYPE;\nOrientationSensor.prototype = Object.create(Sensor.prototype);\nOrientationSensor.prototype.construtcor = OrientationSensor;\n\nOrientationSensor.prototype.init = function () {\n    window.addEventListener('deviceorientation', this.sensorHandler, false);\n};\nOrientationSensor.prototype.uninit = function () {\n    window.removeEventListener('deviceorientation', this.sensorHandler, false);\n};\n\nObject.defineProperties(OrientationSensor.prototype, {\n    orientation: {\n        configurable: false,\n        enumerable: true,\n        get: function () {\n            return this._orientation;\n        },\n        set: function (value) {\n            if (this._orientation !== value) {\n                this._orientation = value;\n                this.emit({ orientation: value });\n            }\n        }\n    }\n});\n\nmodule.exports = OrientationSensor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sensors/orientation-sensor.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n    LAYING_SCREEN_DOWN: 'LayingScreenDown',\n    LAYING_SCREEN_UP: 'LayingScreenUp',\n    STANDING_PORTRAIT: 'StandingPortrait',\n    STANDING_LANDSCAPE: 'StandingLandscape',\n    WATCHED_PORTRAIT: 'WatchedPortrait',\n    WATCHED_LANDSCAPE: 'WatchedLandscape',\n    RISED_PORTRAIT: 'RisePortrait',\n    RISED_LANDSCAPE: 'RiseLandscape',\n    LIFTED: 'Lifted',\n    UNDEFINED: 'Undefined'\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/constants/orientatoin-type.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n    BIKING: 'Biking', // The sensor indicates the user is riding a bicycle on the ground.\n    FIDGETING: 'Fidgeting', // The sensor indicates that it making minor movements while the user is stationary.\n    IDLE: 'Idle', // The sensor indicates it is active but in an idle state. It is not with the user and remaining still such as resting on a table.\n    IN_VEHICLE: 'InVehicle', // The sensor indicates the user is traveling in a motor vehicle on the ground.\n    RUNNING: 'Running', // The sensor indicates the user is traveling at a faster rate than walking and both feet are off the ground between steps.\n    STATIONARY: 'Stationary', // The sensor indicates that it's not moving.\n    UNKNOWN: 'Unknown', \t// The sensor indicates an unknown activity.\n    WALKING: 'Walking',  // The sensor indicates the user is walking. The user travels at a moderate pace with one foot on the ground at all times.\n    LAYING: 'Laying'\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/constants/activity-type.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}